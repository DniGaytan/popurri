# Generated from Popurri.g4 by ANTLR 4.7.1
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2.")
        buf.write("\u0185\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\3\2")
        buf.write("\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\4\3\4\3\5\3")
        buf.write("\5\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n")
        buf.write("\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3")
        buf.write("\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17")
        buf.write("\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\22\3\23")
        buf.write("\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24")
        buf.write("\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26")
        buf.write("\3\26\3\27\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\33")
        buf.write("\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\36")
        buf.write("\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37")
        buf.write("\3 \6 \u00d2\n \r \16 \u00d3\3 \3 \3!\3!\3!\3!\7!\u00dc")
        buf.write("\n!\f!\16!\u00df\13!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3")
        buf.write("\"\3\"\3\"\3\"\5\"\u00ee\n\"\3#\3#\7#\u00f2\n#\f#\16#")
        buf.write("\u00f5\13#\3#\5#\u00f8\n#\3$\7$\u00fb\n$\f$\16$\u00fe")
        buf.write("\13$\3$\3$\6$\u0102\n$\r$\16$\u0103\3%\3%\7%\u0108\n%")
        buf.write("\f%\16%\u010b\13%\3%\3%\3%\7%\u0110\n%\f%\16%\u0113\13")
        buf.write("%\3%\5%\u0116\n%\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3")
        buf.write("&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3")
        buf.write("&\5&\u0137\n&\3&\5&\u013a\n&\3\'\3\'\3\'\3\'\3\'\3\'\3")
        buf.write("\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'")
        buf.write("\3\'\3\'\5\'\u0152\n\'\3(\3(\7(\u0156\n(\f(\16(\u0159")
        buf.write("\13(\3(\5(\u015c\n(\3)\3)\3)\3)\3)\5)\u0163\n)\3*\3*\3")
        buf.write("*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\5*\u0173\n*\3+\3+\3")
        buf.write(",\3,\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\5-\u0184\n-\5\u00dd")
        buf.write("\u0109\u0111\2.\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23")
        buf.write("\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25")
        buf.write(")\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A")
        buf.write("\"C#E$G%I&K\'M(O)Q*S+U,W-Y.\3\2\n\5\2\13\f\17\17\"\"\3")
        buf.write("\2\63;\3\2\62;\5\2C\\aac|\6\2\62;C\\aac|\4\2##AA\4\2-")
        buf.write("-//\5\2\'\',,\61\61\2\u01a3\2\3\3\2\2\2\2\5\3\2\2\2\2")
        buf.write("\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3")
        buf.write("\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2")
        buf.write("\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2")
        buf.write("\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2")
        buf.write("\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63")
        buf.write("\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2")
        buf.write("\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2")
        buf.write("\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3")
        buf.write("\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y")
        buf.write("\3\2\2\2\3[\3\2\2\2\5b\3\2\2\2\7f\3\2\2\2\th\3\2\2\2\13")
        buf.write("j\3\2\2\2\rl\3\2\2\2\17q\3\2\2\2\21s\3\2\2\2\23u\3\2\2")
        buf.write("\2\25w\3\2\2\2\27y\3\2\2\2\31\177\3\2\2\2\33\u0082\3\2")
        buf.write("\2\2\35\u0088\3\2\2\2\37\u008e\3\2\2\2!\u0092\3\2\2\2")
        buf.write("#\u0095\3\2\2\2%\u0098\3\2\2\2\'\u00a0\3\2\2\2)\u00a5")
        buf.write("\3\2\2\2+\u00ac\3\2\2\2-\u00b0\3\2\2\2/\u00b3\3\2\2\2")
        buf.write("\61\u00b5\3\2\2\2\63\u00b7\3\2\2\2\65\u00b9\3\2\2\2\67")
        buf.write("\u00be\3\2\2\29\u00c1\3\2\2\2;\u00c4\3\2\2\2=\u00ca\3")
        buf.write("\2\2\2?\u00d1\3\2\2\2A\u00d7\3\2\2\2C\u00ed\3\2\2\2E\u00f7")
        buf.write("\3\2\2\2G\u00fc\3\2\2\2I\u0115\3\2\2\2K\u0139\3\2\2\2")
        buf.write("M\u0151\3\2\2\2O\u0153\3\2\2\2Q\u0162\3\2\2\2S\u0172\3")
        buf.write("\2\2\2U\u0174\3\2\2\2W\u0176\3\2\2\2Y\u0183\3\2\2\2[\\")
        buf.write("\7o\2\2\\]\7q\2\2]^\7f\2\2^_\7w\2\2_`\7n\2\2`a\7g\2\2")
        buf.write("a\4\3\2\2\2bc\7x\2\2cd\7c\2\2de\7t\2\2e\6\3\2\2\2fg\7")
        buf.write(".\2\2g\b\3\2\2\2hi\7<\2\2i\n\3\2\2\2jk\7?\2\2k\f\3\2\2")
        buf.write("\2lm\7h\2\2mn\7w\2\2no\7p\2\2op\7e\2\2p\16\3\2\2\2qr\7")
        buf.write("*\2\2r\20\3\2\2\2st\7+\2\2t\22\3\2\2\2uv\7}\2\2v\24\3")
        buf.write("\2\2\2wx\7\177\2\2x\26\3\2\2\2yz\7e\2\2z{\7n\2\2{|\7c")
        buf.write("\2\2|}\7u\2\2}~\7u\2\2~\30\3\2\2\2\177\u0080\7/\2\2\u0080")
        buf.write("\u0081\7@\2\2\u0081\32\3\2\2\2\u0082\u0083\7d\2\2\u0083")
        buf.write("\u0084\7t\2\2\u0084\u0085\7g\2\2\u0085\u0086\7c\2\2\u0086")
        buf.write("\u0087\7m\2\2\u0087\34\3\2\2\2\u0088\u0089\7y\2\2\u0089")
        buf.write("\u008a\7j\2\2\u008a\u008b\7k\2\2\u008b\u008c\7n\2\2\u008c")
        buf.write("\u008d\7g\2\2\u008d\36\3\2\2\2\u008e\u008f\7h\2\2\u008f")
        buf.write("\u0090\7q\2\2\u0090\u0091\7t\2\2\u0091 \3\2\2\2\u0092")
        buf.write("\u0093\7k\2\2\u0093\u0094\7p\2\2\u0094\"\3\2\2\2\u0095")
        buf.write("\u0096\7k\2\2\u0096\u0097\7h\2\2\u0097$\3\2\2\2\u0098")
        buf.write("\u0099\7g\2\2\u0099\u009a\7n\2\2\u009a\u009b\7u\2\2\u009b")
        buf.write("\u009c\7g\2\2\u009c\u009d\7\"\2\2\u009d\u009e\7k\2\2\u009e")
        buf.write("\u009f\7h\2\2\u009f&\3\2\2\2\u00a0\u00a1\7g\2\2\u00a1")
        buf.write("\u00a2\7n\2\2\u00a2\u00a3\7u\2\2\u00a3\u00a4\7g\2\2\u00a4")
        buf.write("(\3\2\2\2\u00a5\u00a6\7t\2\2\u00a6\u00a7\7g\2\2\u00a7")
        buf.write("\u00a8\7v\2\2\u00a8\u00a9\7w\2\2\u00a9\u00aa\7t\2\2\u00aa")
        buf.write("\u00ab\7p\2\2\u00ab*\3\2\2\2\u00ac\u00ad\7p\2\2\u00ad")
        buf.write("\u00ae\7q\2\2\u00ae\u00af\7v\2\2\u00af,\3\2\2\2\u00b0")
        buf.write("\u00b1\7,\2\2\u00b1\u00b2\7,\2\2\u00b2.\3\2\2\2\u00b3")
        buf.write("\u00b4\7\60\2\2\u00b4\60\3\2\2\2\u00b5\u00b6\7]\2\2\u00b6")
        buf.write("\62\3\2\2\2\u00b7\u00b8\7_\2\2\u00b8\64\3\2\2\2\u00b9")
        buf.write("\u00ba\7p\2\2\u00ba\u00bb\7q\2\2\u00bb\u00bc\7p\2\2\u00bc")
        buf.write("\u00bd\7g\2\2\u00bd\66\3\2\2\2\u00be\u00bf\7v\2\2\u00bf")
        buf.write("\u00c0\7q\2\2\u00c08\3\2\2\2\u00c1\u00c2\7d\2\2\u00c2")
        buf.write("\u00c3\7{\2\2\u00c3:\3\2\2\2\u00c4\u00c5\7r\2\2\u00c5")
        buf.write("\u00c6\7t\2\2\u00c6\u00c7\7k\2\2\u00c7\u00c8\7p\2\2\u00c8")
        buf.write("\u00c9\7v\2\2\u00c9<\3\2\2\2\u00ca\u00cb\7k\2\2\u00cb")
        buf.write("\u00cc\7p\2\2\u00cc\u00cd\7r\2\2\u00cd\u00ce\7w\2\2\u00ce")
        buf.write("\u00cf\7v\2\2\u00cf>\3\2\2\2\u00d0\u00d2\t\2\2\2\u00d1")
        buf.write("\u00d0\3\2\2\2\u00d2\u00d3\3\2\2\2\u00d3\u00d1\3\2\2\2")
        buf.write("\u00d3\u00d4\3\2\2\2\u00d4\u00d5\3\2\2\2\u00d5\u00d6\b")
        buf.write(" \2\2\u00d6@\3\2\2\2\u00d7\u00d8\7\61\2\2\u00d8\u00d9")
        buf.write("\7\61\2\2\u00d9\u00dd\3\2\2\2\u00da\u00dc\13\2\2\2\u00db")
        buf.write("\u00da\3\2\2\2\u00dc\u00df\3\2\2\2\u00dd\u00de\3\2\2\2")
        buf.write("\u00dd\u00db\3\2\2\2\u00de\u00e0\3\2\2\2\u00df\u00dd\3")
        buf.write("\2\2\2\u00e0\u00e1\7\f\2\2\u00e1\u00e2\3\2\2\2\u00e2\u00e3")
        buf.write("\b!\2\2\u00e3B\3\2\2\2\u00e4\u00e5\7v\2\2\u00e5\u00e6")
        buf.write("\7t\2\2\u00e6\u00e7\7w\2\2\u00e7\u00ee\7g\2\2\u00e8\u00e9")
        buf.write("\7h\2\2\u00e9\u00ea\7c\2\2\u00ea\u00eb\7n\2\2\u00eb\u00ec")
        buf.write("\7u\2\2\u00ec\u00ee\7g\2\2\u00ed\u00e4\3\2\2\2\u00ed\u00e8")
        buf.write("\3\2\2\2\u00eeD\3\2\2\2\u00ef\u00f3\t\3\2\2\u00f0\u00f2")
        buf.write("\t\4\2\2\u00f1\u00f0\3\2\2\2\u00f2\u00f5\3\2\2\2\u00f3")
        buf.write("\u00f1\3\2\2\2\u00f3\u00f4\3\2\2\2\u00f4\u00f8\3\2\2\2")
        buf.write("\u00f5\u00f3\3\2\2\2\u00f6\u00f8\7\62\2\2\u00f7\u00ef")
        buf.write("\3\2\2\2\u00f7\u00f6\3\2\2\2\u00f8F\3\2\2\2\u00f9\u00fb")
        buf.write("\t\4\2\2\u00fa\u00f9\3\2\2\2\u00fb\u00fe\3\2\2\2\u00fc")
        buf.write("\u00fa\3\2\2\2\u00fc\u00fd\3\2\2\2\u00fd\u00ff\3\2\2\2")
        buf.write("\u00fe\u00fc\3\2\2\2\u00ff\u0101\7\60\2\2\u0100\u0102")
        buf.write("\t\4\2\2\u0101\u0100\3\2\2\2\u0102\u0103\3\2\2\2\u0103")
        buf.write("\u0101\3\2\2\2\u0103\u0104\3\2\2\2\u0104H\3\2\2\2\u0105")
        buf.write("\u0109\7)\2\2\u0106\u0108\13\2\2\2\u0107\u0106\3\2\2\2")
        buf.write("\u0108\u010b\3\2\2\2\u0109\u010a\3\2\2\2\u0109\u0107\3")
        buf.write("\2\2\2\u010a\u010c\3\2\2\2\u010b\u0109\3\2\2\2\u010c\u0116")
        buf.write("\7)\2\2\u010d\u0111\7$\2\2\u010e\u0110\13\2\2\2\u010f")
        buf.write("\u010e\3\2\2\2\u0110\u0113\3\2\2\2\u0111\u0112\3\2\2\2")
        buf.write("\u0111\u010f\3\2\2\2\u0112\u0114\3\2\2\2\u0113\u0111\3")
        buf.write("\2\2\2\u0114\u0116\7$\2\2\u0115\u0105\3\2\2\2\u0115\u010d")
        buf.write("\3\2\2\2\u0116J\3\2\2\2\u0117\u0118\7k\2\2\u0118\u0119")
        buf.write("\7p\2\2\u0119\u013a\7v\2\2\u011a\u011b\7h\2\2\u011b\u011c")
        buf.write("\7n\2\2\u011c\u011d\7q\2\2\u011d\u011e\7c\2\2\u011e\u013a")
        buf.write("\7v\2\2\u011f\u0120\7u\2\2\u0120\u0121\7v\2\2\u0121\u0122")
        buf.write("\7t\2\2\u0122\u0123\7k\2\2\u0123\u0124\7p\2\2\u0124\u013a")
        buf.write("\7i\2\2\u0125\u0126\7d\2\2\u0126\u0127\7q\2\2\u0127\u0128")
        buf.write("\7q\2\2\u0128\u013a\7n\2\2\u0129\u0136\7]\2\2\u012a\u012b")
        buf.write("\7h\2\2\u012b\u012c\7n\2\2\u012c\u012d\7q\2\2\u012d\u012e")
        buf.write("\7c\2\2\u012e\u0137\7v\2\2\u012f\u0130\7k\2\2\u0130\u0131")
        buf.write("\7p\2\2\u0131\u0137\7v\2\2\u0132\u0133\7d\2\2\u0133\u0134")
        buf.write("\7q\2\2\u0134\u0135\7q\2\2\u0135\u0137\7n\2\2\u0136\u012a")
        buf.write("\3\2\2\2\u0136\u012f\3\2\2\2\u0136\u0132\3\2\2\2\u0137")
        buf.write("\u0138\3\2\2\2\u0138\u013a\7_\2\2\u0139\u0117\3\2\2\2")
        buf.write("\u0139\u011a\3\2\2\2\u0139\u011f\3\2\2\2\u0139\u0125\3")
        buf.write("\2\2\2\u0139\u0129\3\2\2\2\u013aL\3\2\2\2\u013b\u013c")
        buf.write("\7r\2\2\u013c\u013d\7w\2\2\u013d\u013e\7d\2\2\u013e\u013f")
        buf.write("\7n\2\2\u013f\u0140\7k\2\2\u0140\u0152\7e\2\2\u0141\u0142")
        buf.write("\7r\2\2\u0142\u0143\7t\2\2\u0143\u0144\7q\2\2\u0144\u0145")
        buf.write("\7v\2\2\u0145\u0146\7g\2\2\u0146\u0147\7e\2\2\u0147\u0148")
        buf.write("\7v\2\2\u0148\u0149\7g\2\2\u0149\u0152\7f\2\2\u014a\u014b")
        buf.write("\7r\2\2\u014b\u014c\7t\2\2\u014c\u014d\7k\2\2\u014d\u014e")
        buf.write("\7x\2\2\u014e\u014f\7c\2\2\u014f\u0150\7v\2\2\u0150\u0152")
        buf.write("\7g\2\2\u0151\u013b\3\2\2\2\u0151\u0141\3\2\2\2\u0151")
        buf.write("\u014a\3\2\2\2\u0152N\3\2\2\2\u0153\u0157\t\5\2\2\u0154")
        buf.write("\u0156\t\6\2\2\u0155\u0154\3\2\2\2\u0156\u0159\3\2\2\2")
        buf.write("\u0157\u0155\3\2\2\2\u0157\u0158\3\2\2\2\u0158\u015b\3")
        buf.write("\2\2\2\u0159\u0157\3\2\2\2\u015a\u015c\t\7\2\2\u015b\u015a")
        buf.write("\3\2\2\2\u015b\u015c\3\2\2\2\u015cP\3\2\2\2\u015d\u015e")
        buf.write("\7c\2\2\u015e\u015f\7p\2\2\u015f\u0163\7f\2\2\u0160\u0161")
        buf.write("\7q\2\2\u0161\u0163\7t\2\2\u0162\u015d\3\2\2\2\u0162\u0160")
        buf.write("\3\2\2\2\u0163R\3\2\2\2\u0164\u0173\7>\2\2\u0165\u0166")
        buf.write("\7>\2\2\u0166\u0173\7?\2\2\u0167\u0173\7@\2\2\u0168\u0169")
        buf.write("\7@\2\2\u0169\u0173\7?\2\2\u016a\u016b\7k\2\2\u016b\u0173")
        buf.write("\7u\2\2\u016c\u016d\7k\2\2\u016d\u016e\7u\2\2\u016e\u016f")
        buf.write("\3\2\2\2\u016f\u0170\7p\2\2\u0170\u0171\7q\2\2\u0171\u0173")
        buf.write("\7v\2\2\u0172\u0164\3\2\2\2\u0172\u0165\3\2\2\2\u0172")
        buf.write("\u0167\3\2\2\2\u0172\u0168\3\2\2\2\u0172\u016a\3\2\2\2")
        buf.write("\u0172\u016c\3\2\2\2\u0173T\3\2\2\2\u0174\u0175\t\b\2")
        buf.write("\2\u0175V\3\2\2\2\u0176\u0177\t\t\2\2\u0177X\3\2\2\2\u0178")
        buf.write("\u0184\7?\2\2\u0179\u017a\7-\2\2\u017a\u0184\7?\2\2\u017b")
        buf.write("\u017c\7/\2\2\u017c\u0184\7?\2\2\u017d\u017e\7,\2\2\u017e")
        buf.write("\u0184\7?\2\2\u017f\u0180\7\61\2\2\u0180\u0184\7?\2\2")
        buf.write("\u0181\u0182\7\'\2\2\u0182\u0184\7?\2\2\u0183\u0178\3")
        buf.write("\2\2\2\u0183\u0179\3\2\2\2\u0183\u017b\3\2\2\2\u0183\u017d")
        buf.write("\3\2\2\2\u0183\u017f\3\2\2\2\u0183\u0181\3\2\2\2\u0184")
        buf.write("Z\3\2\2\2\25\2\u00d3\u00dd\u00ed\u00f3\u00f7\u00fc\u0103")
        buf.write("\u0109\u0111\u0115\u0136\u0139\u0151\u0157\u015b\u0162")
        buf.write("\u0172\u0183\3\b\2\2")
        return buf.getvalue()


class PopurriLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    WS = 31
    COMMENT = 32
    CONST_BOOL = 33
    CONST_I = 34
    CONST_F = 35
    CONST_STR = 36
    TYPE = 37
    ACCESS_TYPE = 38
    ID = 39
    BOOL_OP = 40
    CMP_OP = 41
    ADD_OP = 42
    MULT_DIV_OP = 43
    ASSIGN_OP = 44

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'module'", "'var'", "','", "':'", "'='", "'func'", "'('", "')'", 
            "'{'", "'}'", "'class'", "'->'", "'break'", "'while'", "'for'", 
            "'in'", "'if'", "'else if'", "'else'", "'return'", "'not'", 
            "'**'", "'.'", "'['", "']'", "'none'", "'to'", "'by'", "'print'", 
            "'input'" ]

    symbolicNames = [ "<INVALID>",
            "WS", "COMMENT", "CONST_BOOL", "CONST_I", "CONST_F", "CONST_STR", 
            "TYPE", "ACCESS_TYPE", "ID", "BOOL_OP", "CMP_OP", "ADD_OP", 
            "MULT_DIV_OP", "ASSIGN_OP" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "WS", "COMMENT", "CONST_BOOL", 
                  "CONST_I", "CONST_F", "CONST_STR", "TYPE", "ACCESS_TYPE", 
                  "ID", "BOOL_OP", "CMP_OP", "ADD_OP", "MULT_DIV_OP", "ASSIGN_OP" ]

    grammarFileName = "Popurri.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


